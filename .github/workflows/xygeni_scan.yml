# This is a basic workflow to help you get started with Actions 

name: Xygeni CI/CD Security Scan

# Controls when the workflow will run
on:
  push: 
    branches: [ "main" ]
  # Triggers the workflow on pull request events for the "main" branch
  pull_request: 
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab sd
  workflow_dispatch:
 
env:
  XY_USERNAME: ${{ secrets.XY_USERNAME_LABDEV }}
  XY_PASSWORD: ${{ secrets.XY_PASSWORD_LABDEV }}
  XY_URL: ${{ secrets.XY_URL_LABDEV }}
  XY_TOKEN: ${{ secrets.XY_TOKEN_LABDEV }}
  XY_PRJ_NAME: GitHub-${{ github.event.repository.name }}
  PKG_NAME: octokit
  #PKG_VERSION: "4.0.3"
  DEF_REPORT: "reportMEW.json"
  DEF_LANGUAGE: "javascript"


jobs:
  # This workflow contains a single job called "xygeni_security_scan"
  xygeni_cicd_scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@master
        name: Checking out octokit code
        with:
          repository: octokit/octokit.js
          ref: refs/heads/main
          path: octokit

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        name: Checking out repo code
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # Default: 1
          fetch-depth: '0'
          path: malicious_files


      - name: Copying malicious files  
        run: |
          exit 0
          cp ./malicious_files/* ./octokit

      # Runs a set of commands using the runners shell
      - name: Early Warning simulation
        run: |
          set +e
          
          echo Downloading Xygeni Scanner ....
          curl -L https://get.xygeni.io/latest/scanner/install.sh | /bin/bash -s -- -u $XY_USERNAME -p $XY_PASSWORD -s $XY_URL -d ${GITHUB_WORKSPACE}/scanner 
          
          echo Executing Xygeni scan ....    
          ${GITHUB_WORKSPACE}/scanner/xygeni malware -n LGV_EW-hack --dir ./octokit --skip-detectors=any=low -f text -f json -o reports  
          retVal=$?
          echo -- RET $retVal --
          
          if [ $retVal -ne 0 ]; then
            ls -l *reports.*
            cat *reports*.text
            DEF_REPORT=$(ls report*.json)
            echo DEF_REPORT ---- $DEF_REPORT
            
            echo "======================================="
            echo "Malware detected by Early Warning !!!! "
            echo " => Dep. Name:    $PKG_NAME"
            echo " => Dep. Version: $PKG_VERSION"
            echo "======================================="
         
            cat $DEF_REPORT
            #exit 0
            curl --location --request POST https://apidev.xygeni.io/deps-doctor-service/report/upload/malware \
              --header "Authorization: Bearer $XY_TOKEN" \
              --form "name=\"$PKG_NAME\"" \
              --form "file=@\"$DEF_REPORT\"" \
              --form "version=\"$PKG_VERSION\"" \
              --form "language=\"$DEF_LANGUAGE\""
          fi  
        env:
          GITHUB_PAT: ${{ secrets.GH_PAT }}
